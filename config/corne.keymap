/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        td_e_esc: td_e_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_E_ESC";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp ESCAPE>;
        };

        td_w_lang: td_w_lang {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_W_LANG";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp F19>;
        };

        td_t_tap: td_t_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_T_TAP";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp TAB>;
        };

        td_r_4: td_r_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_R_4";
            #binding-cells = <0>;
            bindings = <&kp R>, <&kp NUMBER_4>;
        };

        td_q_backtik: td_q_backtik {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_Q_BACKTIK";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp GRAVE>;
        };

        td_minus_equal: td_minus_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MINUS_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp EQUAL>;
        };

        td_bracket: td_bracket {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_BRACKET";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };
    };

    combos {
        compatible = "zmk,combos";

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&kp ESC       &td_q_backtik  &td_w_lang      &td_e_esc         &td_r_4          &td_t_tap      &mt BACKSPACE Y  &kp U            &kp I              &kp O            &kp P           &kp BSPC
&kp CAPSLOCK  &hm LCTRL A    &hm LEFT_ALT S  &hm LEFT_SHIFT D  &hm LEFT_GUI F   &kp G          &kp H            &hm RIGHT_GUI J  &hm RIGHT_SHIFT K  &hm RIGHT_ALT L  &hm RCTRL SEMI  &kp RET
&kp TAB       &kp Z          &kp X           &kp C             &kp V            &kp B          &kp N            &kp M            &kp COMMA          &kp DOT          &kp FSLH        &kp RSHFT
                                             &lt 2 SQT         &td_minus_equal  &lt 1 ENTER    &lt 0 SPACE      &td_bracket      &kp BACKSLASH
            >;
        };

        number_layer {
            label = "1";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        arrow_layer {
            label = "3";
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans     &trans  &trans    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &trans           &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans           &trans  &trans
&trans  &trans          &trans          &trans     &trans  &trans    &msc SCRL_LEFT  &msc SCRL_UP    &msc SCRL_DOWN   &msc SCRL_RIGHT  &trans  &trans
                                        &trans     &trans  &trans    &trans          &trans          &trans
            >;
        };
    };
};
